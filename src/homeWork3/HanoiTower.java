package homeWork3;

public class HanoiTower {

//    Имеется три стержня — левый (1), средний (2) и правый (3).
//    На левом стержне находятся n дисков, диаметры которых различны. Диски упорядочены по размеру диаметра,
//    сверху лежит наименьший, снизу — наибольший. Требуется перенести диски с левого стержня на правый,
//    используя средний стержень как вспомогательный.
//
//    Головоломка имеет следующие два правила:
//      1. Вы не можете поместить больший диск на меньший диск.
//      2. За один раз можно перемещать только один диск.
//
//    Реализуйте два подхода для решения: Итеративно  Рекурсивно
//
//    Вывод в консоль можно делать так: "1 -> 3", что будет обозначать "взять верхнее кольцо с первого стержня и переложить его на третий стержень".


    public static void main(String[] args) {
        int n = 3;
        int barFrom = 1;
        int barTo = 3;
        int barHelp = 2;
        solveHanoi(n, barFrom, barTo, barHelp);
    }

    public static void solveHanoi(int n, int from, int to, int help) {
        if (n == 1) {
            System.out.println(from + " -> " + to);
            return;
        }
        solveHanoi(n - 1, from, help, to);
        System.out.println(from + " -> " + to);
        solveHanoi(n - 1, help, to, from);
    }


}
